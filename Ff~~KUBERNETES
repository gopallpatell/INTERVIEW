1 What is Kubernetes and what does it do?
  It is a Open-Source Container Orchestration Tool 
		- Kubernetes is used to Deploy any type of Containers.
		- It is used to ensure high availability of the Applications/services running thru Containers.
		- Used to Ensure High Availability of Containers by creating Replicas of Containers.
		- It supports Auto-Scaling & Load Balancing.
		- Self-Healing

2 How are Kubernetes and Docker linked?
  Docker is focused on creating and running containers while kubernetes is used to
  deploy that container and ensure high availability load balancing auto-scaling and self healing 

3 List the features of Kubernetes. 
  Self-Healing: Restarts or replaces failed containers.
  Horizontal Scaling: Automatically scales applications based on demand.
  Load Balancing: Allows containers to find and communicate with each other.
  Rollouts and Rollbacks: Manages updates and can revert to previous versions if needed.
  Storage Orchestration: Manages persistent storage for containers.
  Namespace Support: Organizes resources for different teams or projects.

4 What are clusters in Kubernetes?
  A Kubernetes cluster is a collection of nodes (machines) that work together, with the control plane managing and 
  coordinating the worker nodes. 
  The cluster is responsible for running and managing applications in containers, 
  ensuring high availability, scalability, and reliability.

5 What do you know about Kubectl?
  kubectl (short for Kubernetes control) is the command-line tool used to interact with and manage Kubernetes clusters. 

6 What is a node in Kubernetes?
   A node in Kubernetes is a machine (physical or virtual) that runs containerized applications. 
  There are two types of nodes: Master nodes that manage the cluster, and Worker nodes that run the applications.

7 List the main components of Kubernetes architecture.
 The Kubernetes architecture consists of two main parts:
  Control Plane: Manages the cluster and makes global decisions (API Server, Scheduler, Controller Manager, etcd).
  Node (Worker Node): Runs containers and workloads (Kubelet, Container Runtime, Kube Proxy, Pods).

            API_Server 				--> # Acts as an interface to the kubernetes 
            ETCD 				--> # Single point of Source for Kubernetes Components or we can say it is a data source for the cluster
	    Scheduler				--> # To identify the Healthy Node for Deployments
	    Controller Manager 	         	--> # To run the pods in its desired state 
	    Kubelet 				--> # Is a Kubernetes Agent used to Create & Deploy the Pods	
	    KubeProxy				--> # Is used to enable pod networking by create Pod IP Address			
	    CRI - Container RunTime Interface (Container-D) --> # It is used identify the Image from Container Registry for deployment

8 List the different types of services in Kubernetes.
  ClusterIP: The ClusterIP service is used to expose a service only within the Kubernetes cluster, not to the outside world.
  NodePort: Exposes service on each node's IP, accessible externally.
  LoadBalancer: Provisions an external load balancer, exposing the service to the internet.
  ExternalName: it is used to connect with external resource like database API

9 What is Ingress network?
  ingress is a traffic controler in lkubernetes which is used to send the 
  traffic or route the traffice to the right service in kubernetes cluster
  Ingress helps direct incoming internet traffic to the right service inside the cluster. For example, if someone visits example.com/api, 
  Ingress will send that request to your "API" service, and if they visit example.com/blog, Ingress will send it to the "Blog" service

  Single Entry Point:
  Instead of creating a separate entry for each service (like exposing each one with its own IP address), 
  you can use Ingress to create one entry point (one IP or domain) that handles traffic for all your services. This simplifies the setup.
  Ingress is like a traffic controller that makes sure the right visitors (users) get directed to the right service in your Kubernetes cluster.
  It helps you manage access through one main entry point (a single IP or domain).
  It can handle things like routing, load balancing, and security (SSL encryption).

10 egress
  While Ingress controls incoming traffic to the cluster, Egress controls outgoing traffic of the cluster.

11 Differentiate between a replica set and a replication controller.
  ReplicaSet and ReplicationController are both Kubernetes resources used to ensure that a specified number of replicas of a pod are running at any given time, 
  ReplicaSet is an updated and more flexible version of ReplicationController, introduced in Kubernetes 1.2.
  we have extra features in replicaset like we can set a label self healing no rolling upddate 

12 deployment 
  in this we have extra features like rollback and rolling update 
  Deployment in Kubernetes is a higher-level resource that manages the deployment and lifecycle of your application’s pods. 
  It allows you to define the desired state of your application, such as the number of replicas, 
  the version of the application, and how updates should be rolled out. Kubernetes then takes care of ensuring that the current state matches the desired state.
				
  Automatically running a specified number of copies (pods) of your app.
  Ensuring that the right version of the app is always running.
  Allowing you to easily update the app and automatically handle any failures or rollbacks.

13 Explain the pod in Kubernetes.
  A Pod is the smallest unit in Kubernetes. It can hold:
  One container (like a single app).
  Or multiple containers that work together (like a team of apps that need to talk to each other).

14 deff btn pod and deployment 
  Pod: it is a smallest unit in kubernetes  A single instance of a container or application.
  Deployment: it is used to manages multiple Pods, handles scaling, rolling updates, rollback and ensures high availability.

15 What do you know about clusters of containers in Kubernetes? 
  A Kubernetes Cluster consists of a control plane (master) and multiple worker nodes.
  Each node runs a container runtime (e.g., Docker, containerd) that runs Pods.
  Pods are the smallest deployable units in Kubernetes, and they can contain one or more containers.
  Kubernetes clusters provide features like scaling, self-healing, and load balancing for containerized applications, making them ideal for running large-scale distributed systems.

16 Explain the two types of Kubernetes pods.
  single conatainer pod 
  multi-container pod

17 Tell me about labels in Kubernetes. 
  labels are like tags used to select and identify the objects such as pods.

18 What is persistent volume?
  In very simple terms, a Persistent Volume (PV) in Kubernetes is like a hard drive that stores data and doesn't go away even if the app (Pod) using it is deleted or recreated.

19 what is namespace in kubernetes

20 How can you achieve zero downtime in Kubernetes?
  We can achieve zero downtime in Kubernetes through RollingUpdate strategy. 

21 list of exception you got while creating pod
  BadRequest – Invalid YAML syntax or missing required fields.
  NotFound – The resource doesn’t exist or is deleted.
  NotAcceptable – Invalid container image or missing registry.
  AlreadyExists – Pod name already in use.

17. In kubernetes what is deployment and services
   Deployment Controller
   ReplicaSet Controller
   
22. Different services types in kubernetes 
    ClusterIP: The ClusterIP service is used to expose a service only within the Kubernetes cluster, not to the outside world.
    NodePort: Exposes service on each node's IP, accessible externally.
    LoadBalancer: Provisions an external load balancer, exposing the service to the internet.
    ExternalName: it is used to connect with external resource like database API

23. Use of Proxy
    Is used to enable pod networking by create Pod IP Address	

24. What is diff between kubectl apply and kubectl create/update
  Use kubectl create when you are certain the resource doesn’t exist and you are creating it for the first time.
  Use kubectl apply for both creation and updates. It’s the recommended command for declarative configuration management
  and handling changes over time.

25 How to rollback deployment in kubernetes give command
   kubectl rollout undo deployment <deployment-name>

26. Scale a deployment in kubernetes command 
    kubectl scale deployment nginx-deploy --replicas=5

27. Different components of kubernetes master
    (API Server, Scheduler, Controller Manager, etcd).

28 Manifest File				
   # Is a AppConfig file, that defines the properties of the pods to be deployed in kubernetes

29. # Expose PODS using NodePort service
  kubectl expose pod nginx-pod --type=NodePort --port=80

30 How do you set resource limits on Kubernetes Pods?
   we can limit flag in yaml file to limit the resource on pods  like cpu and memory usage 
   or we can also request for memory and cpu 

  Memory Limits: If a container exceeds its memory limit, it will be terminated and potentially restarted by Kubernetes.
  This is called an OOM (Out of Memory) Kill.
  CPU Limits: When a container exceeds its CPU limit, it will be throttled (i.e., Kubernetes will restrict the container's 
  CPU usage but will not kill it).

31 Explain Kubernetes taints and tolerations.
  Taints and Tolerations are a way to control where pods can run in a Kubernetes cluster.

32 How does a Kubernetes Network Policy work?
  A Kubernetes Network Policy is a way to control the communication (traffic) between pods in a Kubernetes cluster. 
  like which pod can comuunicate with each other 
  We want to make sure the frontend pod can talk to the backend pod, but no other pods can talk to the backend pod.

33 What is an Init Container in Kubernetes?
  Init containers are a useful feature in Kubernetes to ensure that certain tasks are performed before the main 
  application containers start running.

34 How do you pass environment variables to a Kubernetes Pod?
  we can directolly pass the env in pod yml file  and from configmap

35. Pod is in pending state what will be the reason
  Insufficient resources (CPU, memory) on nodes.
  no node vailable for pods
  Image Pull Issues

36. your pod getting terminated/crashed what is the issue
  Resource Limits Exceeded: Adjust CPU/memory limits.
  container in createded in detatched mode.
  Out of Memory (OOM): Increase memory limits or optimize app.

37. its ok if I had 2 container in one pod , what you will suggest
   it’s okay to have two containers in one Pod, especially when they need to work together closely 
   However, always evaluate if they really need to be in the same Pod, as separating them can improve flexibility 
   and scalability.
   Can reduce scalability because both containers scale together. If one container needs more resources or scaling,
   both containers will scale together.

38. how to ,limit resources in pod
    we can limit flag in yaml file to limit the resource on pods  like cpu and memory usage 
   or we can also request for memory and cpu 

39. I want to deploy application in Kubernetes , how to do that
  Create a Deployment YAML file with container details.
  Apply the YAML with kubectl apply -f <file>.yaml.
  Create a Service to expose the app.
  Verify with kubectl get.
  Access the app through the Service (LoadBalancer/NodePort).

40. My application is not accessible through browser what is the problem
  Check Service: Ensure it’s of type LoadBalancer or NodePort and exposed correctly.
  Check Pods: Make sure Pods are running (kubectl get pods) and healthy.
  Firewall: Ensure traffic is allowed on the correct port.

41. After deletion of pod data get deleted , how to retain pod data
   To retain data after Pod deletion, use Persistent Volumes (PVs) and Persistent Volume Claims (PVCs):
   Create a Persistent Volume (PV) to define storage.
   Create a Persistent Volume Claim (PVC) to request storage.
   Mount PVC in the Pod to retain data.

42 what is daemonset in kubernetes
  A DaemonSet in Kubernetes ensures that a copy of a specific Pod is running on all (or selected) nodes in the cluster.

43 how deploment or service knows which pods should they manage
  In Kubernetes, Deployments and Services use labels and selectors to identify and manage the Pods they control.































