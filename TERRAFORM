1. What is Terraform?
Terraform is an open-source infrastructure as code (IaC) tool developed by HashiCorp that allows
users to define and provision data center infrastructure using a high-level configuration language
called HCL (HashiCorp Configuration Language) or JSON.
Example:
provider "aws" {
region = "us-west-2"
}
resource "aws_instance" "example" {
ami = "ami-0c55b159cbfafe1f0"
instance_type = "t2.micro"
}

2. What are the main features of Terraform?
Terraform's main features include Infrastructure as Code (IaC), execution plans, resource graphs,
change automation, and state management.
Example:
terraform {
backend "s3" {
bucket = "my-terraform-state"
key = "global/s3/terraform.tfstate"
region = "us-west-2"
}


3. What is the difference between Terraform and other IaC tools like
Ansible, Puppet, and Chef?

Terraform focuses on infrastructure provisioning, is declarative, and uses HCL. Tools like Ansible,
Puppet, and Chef focus on configuration management and are procedural.
Example:
resource "aws_instance" "example" {
ami = "ami-0c55b159cbfafe1f0"
instance_type = "t2.micro"
}

4. What is a provider in Terraform?
A provider is a plugin, Providers define the resources and data sources available.
it is a plugine used to define the resource and APIs
Example:
provider "aws" {
region = "us-west-2"
}

5. How does Terraform manage dependencies?
Terraform uses a dependency graph(resource graph) to manage dependencies.
means it will Automatically determine correct order for resource creation, update, or deletion.
Example:
resource "aws_instance" "web" {
ami = "ami-0c55b159cbfafe1f0"
instance_type = "t2.micro"
subnet_id = aws_subnet.example.id
}
resource "aws_subnet" "example" {
vpc_id = aws_vpc.example.id
cidr_block = "10.0.1.0/24"
}
resource "aws_vpc" "example" {
cidr_block = "10.0.0.0/16"
}

6. What is a state file in Terraform?
it is used to store and track the current state of the infrastructure. 
Example:
terraform state show

7. Why is it important to manage the state file in Terraform?
it is immportant to manage the terraformm state file bcz it has all the history about the infrastructure and if we lost
the state file then we dont have longer history about the infrastructure like what changes we made what resouces are created 
what is the size of resource. to avoiding all this we need to keep the state file upto date and secure..

8. How can you secure the state file in Terraform?
Use remote backends (S3, Terraform Cloud, etc.) instead of local files.
Enable encryption for state files at rest and in transit.
Use state locking to avoid concurrent writes.
Restrict access to the state file using IAM policies or RBAC.
Enable versioning to keep track of changes and roll back if needed.
Use secrets management services to store sensitive information outside the state file.
Limit access to only trusted users or systems.
Back up your state file regularly.
Example:
terraform {
backend "s3" {
bucket = "my-terraform-state"
key = "global/s3/terraform.tfstate"
region = "us-west-2"
encrypt = true
}
}

9. What are modules in Terraform?
modules are used for reusable work

Modules are  used when we want to reuse anthing like i have created a ec2 instance and 
i want to reuse this infrastructure in future for that we create module of this infrastructure 

Example:
module "vpc" {
source = "./modules/vpc"
}

10. What is the purpose of the terraform init command
it is used to initialize the provider or we can say it is used to initialize the Project.

11. What does the terraform plan command do?
Preview the Terraform Script 
terraform plan creates an execution plan, 

12. What is the terraform apply command used for?
The terraform apply command is used to apply the terraform script or create and update the infrastructure 
the changes defined in your Terraform configuration to your actual infrastructure.

13. What is the purpose of the terraform destroy command?
terraform destroy is used to destroy the infrastructure managed by Terraform. It removes all
the resources defined in the configuration.
Example:
terraform destroy

14 What is a Terraform backend? 
it is terraform state file storage loaction 
terraform backend it is the loacation where the terraformm state file stored 
like initially it is stored by default in local machine but for large and secure infrastructure 
we store the state file remotely
local backend
remote backend 

15 How do you handle sensitive data in Terraform?
for that we use environment variables ,aws secret managers and we use hashicorp vault..

16  What are Terraform workspaces?

using terraform workspace we can create diff environment like dev, staging, production in single configuration script.

17 What is the difference between terraform taint and terraform untaint?
terraform taint is used to recreate the resource on next apply
terraform untaint is used to cancel the recreation of the resource on the next apply.

18 What is the purpose of the terraform refresh command?
terraform refresh updates the state file with the actual infrastructure.

19 What are data sources in Terraform?
data source is used to use a external resource
Latest AWS AMI: Fetches the latest Amazon Machine Image (AMI).
AWS VPC: Retrieves an existing Virtual Private Cloud (VPC) from AWS.
AWS Security Group: Gets an existing Security Group in AWS.

20  . How can you import existing infrastructure into Terraform?
using terraform import command 

terraform import <resource_type>.<resource_name> <resource_id>
terraform import aws_instance.example i-0abcd1234efgh5678

21 How do you upgrade Terraform versions? 
Update the Terraform binary and then run terraform init -upgrade to upgrade provider versions.

for chocolatey choco upgrade terraform 
for linux   sudo apt-get update
            sudo apt-get upgrade terraform

22  What are Terraform output values?
it is used to display the information about the infrastructure that we defined in the output block 

resource "aws_instance" "example" {
  ami           = "ami-0abcdef1234567890"
  instance_type = "t2.micro"
}
output "instance_id" {
  value = aws_instance.example.id
  description = "The ID of the EC2 instance"
}
output "public_ip" {
  value = aws_instance.example.public_ip
  description = "The public IP address of the EC2 instance"
}

terraform apply

output 
instance_id = i-0abcdef1234567890
public_ip = 54.123.45.67

23 What are Terraform’s limitations?

Mutable Infrastructure: Terraform is better suited for immutable infrastructure; updating resources may require recreation.
No Rollback: There’s no native rollback mechanism; recovery from errors often requires manual intervention.
Sensitive Data in State: Sensitive information may be stored in the state, requiring care in handling.
Slow Performance: Large-scale changes or many resources can lead to slow execution.

24 How do you handle dependencies in Terraform?

Terraform automatically handles dependencies through resource relationships defined in configurations.

25 How do you deal with state file locking?
for this we use backends

26 What are the benefits of using remote backends?
it is used for large infrastructer and for versoning the infrastructure

27 What is the purpose of the terraform validate command?
The terraform validate command is used to check the syntax and 
validity of your Terraform configuration files (.tf or .tf.json).

28 What are depends_on in Terraform?
when one resource is depend or relies on another resource we can use depend_on argument.

29 Describe a time when you had to troubleshoot a Terraform configuration issue.
State Locking Conflicts: Multiple users trying to apply changes at the same time, causing state file lock errors.
Resource Dependency Issues: Terraform failing to create resources in the correct order due to missing dependencies.
Manual Changes: Changes made directly in the cloud provider (e.g., AWS) causing Terraform to conflict when 
managing the resource.

30  What are the different ways to pass variables in Terraform?
environment variables,  directly in the configuration file.






































































