Q.1 Tell me some about Hypervisor. 
  hypervisor is used to create the vms using hypervisor we can create multiple vms on a single physical server

Q.2 Can you state the advantages of Docker over Hypervisor?
  Virtual Machines :
		- VMs are hardware level Virtualization 
		- VMs are created using Hypervisor 
		- VMs are used to run the Operating Systems
		- VMs will continue to execute even if there is no task or active applications
		- VMs consume more space and time to start up.
  Containers :
		- Containers are application level Virtualization 
		- Containers are created using Container Engine 
		- Containers are used to run the the Application. NOT Operating Systems
		- Containers will immediately go to EXIT state, if there is no task or active applications
		- Containers consume less space and time to start up
		- Using Containers we can reduce the no. of VM, But we cannot completely elimate VMs
	- Container run in its own isolated address spac, the scope of the container application is within the container 
	
Q.3 Define Docker images.
  Is a Static file that defined the properties of the Container and its dependencies 

Q.4 what is the current docker version
    27.5.1

Q.5 Tell me something about Docker machine. 
  Docker Machine is a tool that helps you create and manage Docker environments 
  A Docker environment is the collection of everything that allows you to run Docker containers, including the Docker 
  Engine, host machine, containers, images, 
 Here’s a breakdown of the key elements that make up a Docker environment:

  Docker Engine:
  This is the core software that runs Docker containers.

  Docker Host:
  The Docker host is the physical or virtual machine where the Docker Engine runs. It provides the resources (like CPU, 
  memory, and storage) needed to run containers.

  Containers:
  Containers are lightweight, isolated environments where applications run. 

Docker Images:
Is a Static file that defined the properties of the Container and its dependencies

Docker Registry (e.g., Docker Hub):
docker regestry is place where we can shave the docker images and version controle

Q.6 Define Docker Swarms.
  - Used to Ensure High Availability of Containers by creating Replicas of Containers.
  It is meant only for Docker Containers.

Q.7 then why we use kubernetes instant of docker swarn..?
   If your app is small, Docker Swarm might be enough. But if you want to run large, complex apps that need advanced 
   features, Kubernetes is the better choice.

  Kubernetes has a much richer set of features. It includes powerful tools like:
  Automated rollbacks and updates
  Self-healing (restarting containers that fail)
  Horizontal scaling
  Customizable resource management (CPU, memory)
  Stateful sets (for managing stateful applications like databases)
  Complex networking configurations

Q.8  Describe the usage of Dockerfile?
  A Dockerfile is a text file it is a set of instructions for building a Docker image.

FROM: Defines the base image for the container.
RUN: Executes commands to set up the environment.
CMD: CMD defines the default command to run when the container starts.
COPY: Copies files from the host to the container.
ADD: Similar to COPY, with additional features like fetching remote files.
WORKDIR: Sets the working directory inside the container.
EXPOSE: Specifies which ports the container will use.
VOLUME: Creates mount points for persistent storage.
ENV: Sets environment variables.
ARG: Defines build-time variables.
USER: Specifies the user to run the container as.
SHELL: Specifies the shell to use for RUN commands.

Q.9 What is command to build  docker image from Dockerfile ?
  $ docker build -t image_name .    # .  is for build the imagre in current directory

Q.10  What is the command to run the image as a container?
  $ docker run -it image_name

Q. 11  What is difference between ADD and COPY in Dockerfile
 COPY 								# To Copy the file from host volume to container volume
 ADD 								# To Copy the file from Host Volume as well as from URL

Q.12  what are Docker Namespaces?
    it is used to create a seperate invironment 
  like we can create a invironment for user means that user can run the container 
  also we can create seperate namespace for mount points means the mount volume is responsible for selected containers

Q. 13 Why is it necessary to monitor a  Docker?
  monitoring Docker containers is like checking on your car while driving. 
  You look at the speed, fuel, and engine lights to make sure everything is running smoothly. If something goes wrong, you 
  can fix it before it becomes a bigger problem!

Q. 14  Define Docker compose?
  Docker Compose is a tool that helps you run and manage multiple Docker containers at the same time, with just one command.

Q. 15  What is depends_on in Docker compose
  it is used when one server is depends on the another server. like if i am using a web server and one db server and i want 
  to start db server first then i can use depend on after the 
  web server like this 

version: '3'
services:
  web:
    image: nginx
    depends_on:
      - db
    ports:
      - "80:80"
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: example


like a web app needing a database to be available first.


Q. 16  Describe the role of Docker load and save command.
  it is use to import and export the docker images without internet. 
  using docker save -o file.tar  gopallpatell/netflix:v1.0   we can compress the image in a file for exporting the image 
  and using docker load -i file.tar to extract that file offline 

  docker save: Creates a tarball of a Docker image that you can transfer or back up.
  docker load: Loads a Docker image from a tarball into your local Docker environment.

Q. 17 Which is the most feasible type of application for Docker containers – Stateless or Stateful?
  Stateless applications are generally more feasible and suited for Docker containers compared to stateful 
  applications. 
  bcz dont need to give any input for this type of application.
                  Stateless Applications
				- Application that will not have any state of execution
				- Applications that will not create any output/need any input.
		  Stateful Applications ::
				- Application that will have state of execution
				- Applications that requires some input and generate some output

Q 18.  Differentiate between a Docker layer and a image.
  Layers are the individual steps to create and building the image 
  docker Image is the final, complete result that you can use to create something (like a container in Docker).

Q.19 vertualization
  Virtualization allows multiple virtual computers (VMs) to run on a single physical machine, improving efficiency and 
  flexibility.
  Hypervisor:
  The hypervisor is the software that manages and runs virtual machines. 
  It sits between the physical hardware and the VMs, allocating resources like CPU, memory, and storage to each VM.
  a hypervisor is the software that allows multiple virtual computers to run on a single physical machine.
 
Q.20  What if you have accidentally out of the Docker containers, will you loose the files?
  If you have a container running a web application and the database is storing data in a Docker volume or a bind mount, 
  even if the container crashes or is removed, the database files will still be available in the volume or on the host 
  system.

  Conclusion:
  Without volumes or mounts: Yes, you will lose the files inside the container.
  With volumes or mounts: No, your files are safe and persistent even if you remove the container.


Q.21   What are factors that decides the number of containers you can run on?
  System resources like CPU, RAM, and disk space are the main limiting factors.

Q.22 What is Dockerfile Instructions ?
  Dockerfile contains a set of Instructions to build Docker Image

Q23  What is Docker Prune ?
  docker prune ins used to delete the unused container, images and volumes 

  Here are the docker prune commands in one line:
  docker system prune: Removes stopped containers, unused networks, dangling images, and build cache.
  docker container prune: Removes stopped containers.
  docker image prune: Removes dangling images (images not tagged or used by any container).
  docker volume prune: Removes unused Docker volumes.
  docker network prune: Removes unused Docker networks.


Q24 why docker is important for devops.?
  Docker is important for DevOps because it simplifies and streamlines the development, testing, and deployment process. 
  Here’s why:
  lie for isolation and scalability we can run multiple container on a single vm 

Q25   Please Explain How Does Docker Work?
  First, you build a Docker image using a Dockerfile or pull an image from a registry (like Docker Hub).
  Then, you run a container from the image, and Docker takes care of setting up the environment for your application to run.
  The container is isolated but can communicate with other containers or the host system as needed, using features like 
   networking and volumes.

Q26  What is the difference between containerization and virtualization?
  Virtualization allows multiple virtual computers (VMs) to run on a single physical machine, improving efficiency and 
  flexibility.
  containerization is the process of packaging the application and its dependences.
  it can be also used to run multiple application in one VM


Q27 How do you keep your Docker images up to date?
  Using a continuous integration (CI) pipeline: A CI pipeline can automatically build and test Docker images.
  or we can version controle the image 

Q29   You want to update a running container with a new version of the application without downtime. How can you achieve 
   zero-downtime deployments in Docker?
  1. Rolling update: Docker Swarm will update one container at a time, 
  2. Blue-Green Deployment (Manual Method)
  In more advanced scenarios, you can implement a blue-green deployment strategy manually, where you run two identical 
  environments (blue and green), switching traffic between them.

30. docker commit 
  docker commit is used to create new image based on the modified continers or we can say existing containers
  docker commit <container_id> my_ubuntu_with_vim:latest

31 Port Mapping / Port Binding ::::
  - It is used to expose the container to access thru internet 
  docker run -it -p <host_Port>:<container_Port> tomcat:8.0
  docker run -it -p 8089:8080 tomcat:8.0

32 docker mount 
  docker run --mount source=my_data,target=/data my_image

  docker run -v /host/path:/container/path my_image
  /host/path: The full path to the directory or file on your host machine.
  /container/path: The path inside the container where the file or directory will be mounted.







