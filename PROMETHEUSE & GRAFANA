1. What is Prometheus and why is it used for monitoring?
Prometheus is an open-source monitoring and alerting toolkit. 
It is used for recording real-time metrics in a time-series database, 
allowing for powerful queries and analysis, as well as alerting based on those metrics.

2. Explain the architecture of Prometheus.
Ans:
Prometheus follows a server-agent model.

node_cpu_seconds_total    node_memory_MemTotal_bytes

3. What is time-series data and how does Prometheus use it?
Ans:
it means it will collect the data time to time. prometheus uses timme series data to collect the metrices of the target 
machine for monitering and  better visualiztion.

4. How does Prometheus collect metrics from targets?
it uses pulling procces or we can se scraping to collect the metrices fromm the target for that 
we need node exporter in target machine

5 What is the role of exporters in Prometheus?
exporters are used to collect the metrices such as cpu usage memory usage disk from the hosts where it is running and 
expose these metrices in formate that prometheus can scrape and store 

6 Describe the PromQL language and its key features.
prometheus quary langauage it is quary langauage used to retreive manipulate and visualize the time series data stored
in its database 

7. What are the different types of metrics in Prometheus?
Ans:
Prometheus metrics can be classified into four types: counters, gauges, histograms, and summaries.
Each type has its own use case and behavior.

8 How does Prometheus handle alerting and notifications?
prommetheus has a built-in alert mmanager for alerting we need to define the alerting rule 
then it will alert when it will triggers like emails and slack notification 

9  How does Prometheus handle high availability and scalability?
Prometheus is highly scalanle and available like we can do horizontel scaling using fedration and sharding then we can 
replicate using externel tool like thanos we can use load balancing then we have built in alerting manager for alert notification

1. What is Grafana and what is its role in monitoring?
Ans:
Grafana is an open-source platform for data visualization and monitoring. 
It allows users to create dashboards with interactive charts and graphs to visualize metrics collected 
from various data sources.

2. Describe the architecture of Grafana.
Ans:
Grafana follows a client-server architecture.

3. How does Grafana integrate with Prometheus?
Ans:
Grafana integrates with Prometheus as a data source it will collect the metrices and create the deshbords

4. Explain the concept of dashboards in Grafana.
Ans:
Dashboards in Grafana are a collection of panels that visualize data from one or more data sources.

5. What are panels in Grafana and how are they used?
panels are individual visualization of the data source. it desplay the time series data and application matrices
if graphs and tables 

6. How does Grafana support different data sources apart from Prometheus?
Ans:
Grafana supports a wide range of data sources, including databases (like MySQL, and PostgreSQL), 
cloud platforms (such as AWS CloudWatch, and Azure Monitor), and other monitoring systems (like InfluxDB, and Elasticsearch).

7. Discuss the various visualization options available in Grafana.
grafana can visualize time series graphs, tables, single matrices like disk usage and it can visualize active alerts.   

8 alert manager in garafana 
Alerts in Grafana are configured at the panel level 
(for a specific visualization) or at the dashboard level (for monitoring a group of panels).

Prometheus Alerting is highly suitable for backend monitoring 
Grafana Alerting is more suited for dashboard visualization-based alerting

11. How does Grafana support templating for dashboards?
Ans:
Grafana supports dashboard templating, 
Templating enables users to create reusable dashboards 
templating helps you reuse a single dashboard for different data





































